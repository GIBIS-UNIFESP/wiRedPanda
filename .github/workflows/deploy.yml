# Copyright 2015 - 2025, GIBIS-Unifesp and the wiRedPanda contributors
# SPDX-License-Identifier: GPL-3.0-or-later

name: Deploy

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]

# =================================

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Extract Version
      run: echo "VERSION=$(echo $GITHUB_REF | sed 's|refs/tags/||')" >> $GITHUB_ENV
      shell: bash

    - name: Install Sentry CLI
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          LATEST_VERSION=$(curl -s https://api.github.com/repos/getsentry/sentry-cli/releases/latest | jq -r .tag_name)
          curl -LO "https://github.com/getsentry/sentry-cli/releases/download/$LATEST_VERSION/sentry-cli-Windows-x86_64.exe"
          mv sentry-cli-Windows-x86_64.exe sentry-cli.exe
          
          ACTUAL_VERSION=$(./sentry-cli.exe -V 2>&1 | tr -d '\r')

          if [[ ! "$ACTUAL_VERSION" =~ ^sentry-cli ]]; then
            echo "Downloaded Sentry CLI binary is invalid!" >&2
            exit 1
          fi
        else
          curl -sL https://sentry.io/get-cli/ | bash
        fi
      shell: bash
    
    - name: Install Qt5 32bit
      if: matrix.os == 'windows-latest'
      uses: jurplel/install-qt-action@v4
      with:
        version: 5.15.2
        cache: true
        arch: win32_msvc2019
        aqtversion: ==3.2.*

    - name: Install Qt5 64bit
      if: matrix.os != 'windows-latest'
      uses: jurplel/install-qt-action@v4
      with:
        version: 5.15.2
        cache: true
        aqtversion: ==3.2.*

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.os }}-5.15.2

# =================================

    - name: Compile Sentry SDK
      if: runner.os == 'Linux'
      run: |
        sudo apt install libcurl4-openssl-dev
        git clone --recursive https://github.com/getsentry/sentry-native.git
        mkdir -p sentry-native/build
        cd sentry-native/build
        cmake .. -B build -D SENTRY_BACKEND=crashpad -D CMAKE_BUILD_TYPE=RelWithDebInfo
        cmake --build build --parallel
        cmake --install build --prefix ../../thirdparty/sentry

    - name: Build Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt install libgstreamer-gl1.0-0 libfuse2 libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxkbcommon-dev libxkbcommon-x11-dev
        mkdir build
        cd build
        qmake ../WPanda.pro
        make -j4
        mkdir -p app/lib test/lib
        cp ../thirdparty/sentry/bin/crashpad_handler app/
        cp ../thirdparty/sentry/lib/libsentry.so app/lib/
        cp ../thirdparty/sentry/lib/libsentry.so test/lib/

    - name: Test Ubuntu
      if: runner.os == 'Linux'
      run: |
        cd build/test
        ./WPanda-test -platform offscreen

    - name: linuxdeployqt
      if: runner.os == 'Linux'
      run: |
        mkdir -p appimage appimage/lib
        cp app/resources/wpanda.desktop appimage/wpanda.desktop
        cp app/resources/wpanda.svg appimage/wpanda_icon.svg
        cp build/app/wiredpanda appimage
        cp thirdparty/sentry/lib/libsentry.so appimage/lib/
        wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        chmod +x ./linuxdeployqt-continuous-x86_64.AppImage
        VERSION=$VERSION ./linuxdeployqt-continuous-x86_64.AppImage appimage/wiredpanda -appimage
        rm ./linuxdeployqt-continuous-x86_64.AppImage
        mv wiRedPanda-$VERSION-x86_64.AppImage wiRedPanda-$VERSION-Ubuntu-Qt5.AppImage

    - name: Upload Debug Symbols to Sentry
      if: runner.os == 'Linux'
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: |
        sentry-cli login --auth-token "$SENTRY_AUTH_TOKEN"
        sentry-cli releases new "wiredpanda@$VERSION" -p wiredpanda
        sentry-cli debug-files upload --include-sources -p wiredpanda build/app/
        sentry-cli releases set-commits --auto "wiredpanda@$VERSION" --log-level=debug

    - name: Publish Ubuntu
      uses: softprops/action-gh-release@v2
      if: runner.os == 'Linux'
      with:
        fail_on_unmatched_files: true
        files: '*.AppImage'

# =================================

    - name: Setup MSVC Toolchain
      if: startsWith(matrix.os, 'windows')
      uses: pbeast/gha-setup-vsdevenv@master
      with:
        arch: x86

    - name: Compile Sentry SDK
      if: runner.os == 'Windows'
      run: |
        git clone --recursive https://github.com/getsentry/sentry-native.git
        mkdir -p sentry-native/build
        cd sentry-native/build
        cmake .. -B build -G "Visual Studio 17 2022" -A Win32
        cmake --build build --config RelWithDebInfo
        cmake --install build --prefix ../../thirdparty/sentry --config RelWithDebInfo

    - name: Build Windows
      if: runner.os == 'Windows'
      run: |
        choco install jom
        mkdir build
        cd build
        qmake ../WPanda.pro
        jom
        cp ../thirdparty/sentry/bin/crashpad_handler.exe app/release/
        cp ../thirdparty/sentry/bin/sentry.dll app/release/
        cp ../thirdparty/sentry/bin/crashpad_wer.dll app/release/
        cp ../thirdparty/sentry/bin/sentry.dll test/release/

    - name: Test Windows
      if: runner.os == 'Windows'
      run: |
        cd build
        jom check

    - name: windeployqt
      if: runner.os == 'Windows'
      run : |
        cp -r examples build/app/release
        cd build/app/release
        windeployqt --compiler-runtime wiredpanda.exe
        rm wiredpanda_pch.obj
        rm wiredpanda_pch.pch
        cd ..
        ren release wiredpanda-$env:VERSION
        Compress-Archive -Path wiredpanda-$env:VERSION -DestinationPath wiRedPanda-$env:VERSION-Windows-Qt5-Portable.zip

    - name: Upload Debug Symbols to Sentry
      if: runner.os == 'Windows'
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: |
        ./sentry-cli.exe login --auth-token $env:SENTRY_AUTH_TOKEN
        ./sentry-cli.exe releases new wiredpanda@$env:VERSION -p wiredpanda
        ./sentry-cli.exe debug-files upload --include-sources -p wiredpanda build/app/
        ./sentry-cli.exe releases set-commits --auto wiredpanda@$env:VERSION --log-level=debug

    - name: Publish Windows
      uses: softprops/action-gh-release@v2
      if: startsWith(matrix.os, 'windows')
      with:
        fail_on_unmatched_files: true
        files: 'build/app/*.zip'

# =================================

    - name: Compile Sentry SDK
      if: runner.os == 'macOS'
      run: |
        git clone --recursive https://github.com/getsentry/sentry-native.git
        mkdir -p sentry-native/build
        cd sentry-native/build
        cmake .. -B build -D SENTRY_BACKEND=crashpad -D CMAKE_BUILD_TYPE=RelWithDebInfo -D CMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        cmake --build build --parallel
        cmake --install build --prefix ../../thirdparty/sentry

    - name: Build macOS
      if: runner.os == 'macOS'
      run: |
        mkdir build
        cd build
        qmake ../WPanda.pro
        make -j3
        mkdir -p app/wiredpanda.app/Contents/MacOS
        mkdir -p app/wiredpanda.app/Contents/Frameworks
        cp ../thirdparty/sentry/bin/crashpad_handler app/wiredpanda.app/Contents/MacOS/
        cp ../thirdparty/sentry/lib/libsentry.dylib app/wiredpanda.app/Contents/Frameworks/
        mkdir -p test/WPanda-test.app/Contents/MacOS
        mkdir -p test/WPanda-test.app/Contents/Frameworks
        cp ../thirdparty/sentry/lib/libsentry.dylib test/WPanda-test.app/Contents/Frameworks/

    - name: Test macOS
      if: runner.os == 'macOS'
      run: |
        cd build
        make check

    - name: macdeployqt
      if: runner.os == 'macOS'
      run: |
        cd build/app
        macdeployqt wiredpanda.app -dmg
        mv wiredpanda.dmg wiRedPanda-$VERSION-macOS-Qt5.dmg

    - name: Upload Debug Symbols to Sentry
      if: runner.os == 'macOS'
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: |
        sentry-cli login --auth-token "$SENTRY_AUTH_TOKEN"
        sentry-cli releases new "wiredpanda@$VERSION" -p wiredpanda
        sentry-cli debug-files upload --include-sources -p wiredpanda build/app/
        sentry-cli releases set-commits --auto "wiredpanda@$VERSION" --log-level=debug

    - name: Publish macOS
      uses: softprops/action-gh-release@v2
      if: runner.os == 'macOS'
      with:
        fail_on_unmatched_files: true
        files: 'build/app/*.dmg'
